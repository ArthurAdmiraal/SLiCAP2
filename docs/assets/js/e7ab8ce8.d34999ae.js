"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[455],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var u=r.createContext({}),s=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=s(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,u=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),f=s(n),m=o,y=f["".concat(u,".").concat(m)]||f[m]||p[m]||i;return n?r.createElement(y,a(a({ref:e},l),{},{components:n})):r.createElement(y,a({ref:e},l))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c.mdxType="string"==typeof t?t:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1862:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:1,title:"Structure"},u=void 0,s={unversionedId:"analyses/structure",id:"version-0.3/analyses/structure",isDocsHomePage:!1,title:"Structure",description:"Imagine you want to know the following information of your circuit: the transfer function from your circuit's input port (let's call this port portin) at_ your circuit's output port (let's call this port portout) in the Laplace_ domain.",source:"@site/versioned_docs/version-0.3/analyses/structure.md",sourceDirName:"analyses",slug:"/analyses/structure",permalink:"/SLiCAP2/analyses/structure",editUrl:"https://github.com/slicap/slicap/edit/main/website/versioned_docs/version-0.3/analyses/structure.md",tags:[],version:"0.3",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Structure"},sidebar:"version-0.3/docSidebar",previous:{title:"Advanced use",permalink:"/SLiCAP2/schematics/advanced"},next:{title:"Types",permalink:"/SLiCAP2/analyses/types"}},l=[],p={toc:l};function f(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Imagine you want to know the following information of your circuit: the ",(0,i.kt)("em",{parentName:"p"},"transfer")," function ",(0,i.kt)("em",{parentName:"p"},"from")," your circuit's input port (let's call this port ",(0,i.kt)("inlineCode",{parentName:"p"},"port_in"),") ",(0,i.kt)("em",{parentName:"p"},"at")," your circuit's output port (let's call this port ",(0,i.kt)("inlineCode",{parentName:"p"},"port_out"),") in the ",(0,i.kt)("em",{parentName:"p"},"Laplace")," domain."),(0,i.kt)("p",null,"In SLiCAP, you can obtain this information using the following command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"my_circuit.transfer().from('port_in').at('port_out').laplace\n")),(0,i.kt)("p",null,"This command consists of 4 different pieces of information:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"What circuit you want to analyse (the circuit object ",(0,i.kt)("inlineCode",{parentName:"li"},"my_circuit"),")"),(0,i.kt)("li",{parentName:"ol"},"What type of information you want to know (a transfer function)"),(0,i.kt)("li",{parentName:"ol"},"Details about the exact information you want to know (in the case of a transfer function: the ports between which you want to know the transfer)"),(0,i.kt)("li",{parentName:"ol"},"How the output should be represented (in the Laplace domain)")),(0,i.kt)("p",null,"All core analysis commands share this same structure!"))}f.isMDXComponent=!0}}]);