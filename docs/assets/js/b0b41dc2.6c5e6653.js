"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[447],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),u=i,h=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return t?a.createElement(h,r(r({ref:n},d),{},{components:t})):a.createElement(h,r({ref:n},d))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4085:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],s={sidebar_position:3,title:"Indexing"},c=void 0,l={unversionedId:"schematics/indexing",id:"version-0.3/schematics/indexing",isDocsHomePage:!1,title:"Indexing",description:"Indexing enables you to select a specific object in the schematic. You index these objects any time you want to set a circuit parameter, define which quantity you want to calculate, or edit the circuit.",source:"@site/versioned_docs/version-0.3/schematics/indexing.md",sourceDirName:"schematics",slug:"/schematics/indexing",permalink:"/schematics/indexing",editUrl:"https://github.com/slicap/slicap/edit/main/website/versioned_docs/version-0.3/schematics/indexing.md",tags:[],version:"0.3",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Indexing"},sidebar:"version-0.3/docSidebar",previous:{title:"Importing schematics",permalink:"/schematics/importing"},next:{title:"Working with parameters",permalink:"/schematics/parameters"}},d=[{value:"Indexing components",id:"indexing-components",children:[]},{value:"Indexing nodes",id:"indexing-nodes",children:[]},{value:"Indexing terminals",id:"indexing-terminals",children:[{value:"Indexing an unnamed node from a terminal",id:"indexing-an-unnamed-node-from-a-terminal",children:[]}]}],m={toc:d};function p(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Indexing enables you to select a specific object in the schematic. You index these objects any time you want to set a circuit parameter, define which quantity you want to calculate, or edit the circuit."),(0,o.kt)("p",null,'Schematics consist of three types of objects: components, nodes, and terminals. Components are the devices that make up your circuit, such as resistors, transistors, sources, and nullors. Terminals are the points at which devices connect to the circuit. These may be the gate, source, and drain of a MOSFET, but also the positive and negative terminals of a resistor. Nodes are collections of terminals which are electrically connected. Nodes can be named, such as the "In" node or "Out" node of an amplifier circuit, but can also be nameless.'),(0,o.kt)("h2",{id:"indexing-components"},"Indexing components"),(0,o.kt)("p",null,"You index a component whenever you make modifications to it, access its terminals, calculate the current flowing through it, or calculate the voltage over it. For example, you index a resistor to change its value or set it as a current detector."),(0,o.kt)("p",null,'Each component has a reference designator, such as "R10", "Q3", "Vs", or "PositiveNullor". Components are indexed like python dictionaries using this designator.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'resistor       = circuit["R10"]\ntransistor     = circuit["Q3"]\nvoltage_source = circuit["Vs"]\nnullor         = circuit["PositiveNullor"]\n')),(0,o.kt)("p",null,"Once you have indexed a component, you can make modifications such as changing their value, or indicate you want to calculate a quantity."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# set the resistor value to 10\u03a9\nresistor.value = 10\n\n# calculate the transfer function from the voltage source's voltage to the current through the resistor\ntransfer = circuit.transfer().from(voltage_source).through(resistor)\n")),(0,o.kt)("p",null,"The parameters can be directly modified on the indexed component, no need for an intermediate variable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'circuit["R10"].value = 10\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Check the ",(0,o.kt)("a",{parentName:"p",href:"/api/components"},"Components")," API Reference documentation for an exhaustive list of component properties."))),(0,o.kt)("p",null,"You can also use dot indexing as a shorthand."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"resistor       = circuit.R10\ntransistor     = circuit.Q3\nvoltage_source = circuit.Vs\nnullor         = circuit.PositiveNullor\n")),(0,o.kt)("p",null,"This is useful to concisely change component parameters."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"circuit.R10.value = 10\n")),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Some dot properties are keywords, so that you can only use dictionary indexing. For example, you cannot dot index components called ",(0,o.kt)("inlineCode",{parentName:"p"},"components"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"transfer"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"noise"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"nodes"),"."))),(0,o.kt)("p",null,"A list of all components in the circuit can be obtained."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"circuit.components\n")),(0,o.kt)("h2",{id:"indexing-nodes"},"Indexing nodes"),(0,o.kt)("p",null,"You mainly index nodes to set them as voltage detectors. For example, you index a node when you want to calculate the output voltage of a voltage divider."),(0,o.kt)("p",null,"Nodes are contained within the circuit. A list of all nodes in the circuit can be obtained."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"circuit.nodes\n")),(0,o.kt)("p",null,"Every node is assigned a unique number, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"2"),". These is a contiguous list that starts at zero. The ground node is always numbered 0. The nodes can be indexed like a python list using their number."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"node_0 = circuit.nodes[0]\nnode_1 = circuit.nodes[1]\n")),(0,o.kt)("p",null,"Nodes can also be assigned a net name. The nodes can also be indexed using this name like a python dictionary."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"node_ground = circuit.nodes['ground']\nnode_out    = circuit.nodes['out']\n")),(0,o.kt)("p",null,"Like components in circuits, dot indexing is available as a shorthand for both numeric and name-based indexing."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"node_0   = circuit.nodes.0\nnode_out = circuit.nodes.Out\n")),(0,o.kt)("p",null,"This is useful to concisely index nodes."),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Some dot properties are keywords, so that you can only use dictionary indexing. For example, you cannot dot index nodes called ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),"."))),(0,o.kt)("p",null,"If you don't know the name or number of a node, it is often simplest to ",(0,o.kt)("a",{parentName:"p",href:"#indexing-an-unnamed-node-from-a-terminal"},"index it by one of its terminals"),". For that, you first need to learn about ",(0,o.kt)("a",{parentName:"p",href:"#indexing-terminals"},"indexing terminals"),"."),(0,o.kt)("h2",{id:"indexing-terminals"},"Indexing terminals"),(0,o.kt)("p",null,"You should not need to frequently index terminals. Nevertheless, indexing terminals can be used to index unnamed nodes, to calculate voltages at terminals, to calculate currents flowing into terminals, or to define new connections."),(0,o.kt)("p",null,'Terminals are contained within components. Every terminal has an all lowercase name, such as "out", "in_p", or "pos". Terminals are indexed like python dictionaries using this name.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'resistor = circuit.R10\n\npositive_terminal = resistor["pos"]\nnegative_terminal = resistor["neg"]\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Check the ",(0,o.kt)("a",{parentName:"p",href:"/api/components"},"Components")," API Reference documentation for an exhaustive list of component terminals."))),(0,o.kt)("p",null,"Like components in circuits, you can also use dot indexing as a shorthand for terminals in components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'resistor = circuit["R10"]\n\npositive_terminal = resistor.pos\nnegative_terminal = resistor.neg\n')),(0,o.kt)("p",null,"This is useful to concisely index terminals."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"positive_terminal = circuit.R10.pos\n")),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Some dot properties are keywords, so that you can only use dictionary indexing. For example, you cannot dot index terminals called ",(0,o.kt)("inlineCode",{parentName:"p"},"terminals")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"node"),"."))),(0,o.kt)("p",null,"A list of all terminals in a component can be obtained."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"circuit.R10.terminals\n")),(0,o.kt)("h3",{id:"indexing-an-unnamed-node-from-a-terminal"},"Indexing an unnamed node from a terminal"),(0,o.kt)("p",null,"Unless you are ",(0,o.kt)("a",{parentName:"p",href:"/advanced/editing"},"editing circuits"),", your main use for terminal indexing is to index unnamed nodes by this terminal. If a terminal is connected to a node, that node can be indexed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"terminal.node\n")),(0,o.kt)("p",null,"For example, if the output node of an opamp circuit is not clearly labelled, it could be obtained."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"output_node = amplifier.Opamp.out.node\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"It's easy to make your analyses unreadable when you don't name nodes. It usually pays to go back and name them!"))))}p.isMDXComponent=!0}}]);